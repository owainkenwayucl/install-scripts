#!/usr/bin/env bash

###############################################
# Installing PyTorch
#
# by Owain Kenway, 2022
#
set -e

ln -fs /shared/ucl/apps/build_scripts/includes .

for i in ${includes_dir:=$(dirname $0 2>/dev/null)/includes}/{module_maker,require}_inc.sh; do . $i; done

module purge

require gcc-libs/4.9.2
require python/3.7.4


NAME=${NAME:-pytorch}
VERSION=${VERSION:-1.2.0}
TORCHVISION_VERSION=${TORCHVISION_VERSION:-0.4.0}

SRC_ARCHIVE=${SRC_ARCHIVE:--f https://download.pytorch.org/whl/torch_stable.html}
TYPE=${TYPE:-cpu}
#INSTALL_PREFIX=${INSTALL_PREFIX:-/shared/ucl/apps/$NAME/$VERSION/python3.7.4/$TYPE}
INSTALL_PREFIX=${INSTALL_PREFIX:-$HOME/Applications/$NAME/$VERSION/python3.7.4/$TYPE}

buildext="+cpu"

if [ "$TYPE" == "cuda" ]
then
  require cuda/10.0.130/gnu-4.9.2
  require cudnn/7.5.0.56/cuda-10.0
  SRC_ARCHIVE=""
  buildext=""
fi

rm -rf ${INSTALL_PREFIX}

virtualenv ${INSTALL_PREFIX}
source ${INSTALL_PREFIX}/bin/activate

pip3 install --no-cache-dir future numpy pyyaml setuptools six 

echo
echo ">>> pip3 install torch==${VERSION}${buildext} torchvision==${TORCHVISION_VERSION}${buildext} $SRC_ARCHIVE"
echo

pip3 install torch==${VERSION}${buildext} torchvision==${TORCHVISION_VERSION}${buildext} $SRC_ARCHIVE

# De-venv it.
pip3 uninstall -y pip 
rm -rf ${INSTALL_PREFIX}/bin/pip*
rm -rf ${INSTALL_PREFIX}/bin/python*
rm -rf ${INSTALL_PREFIX}/bin/activate*
rm -rf ${INSTALL_PREFIX}/bin/easy_install*


