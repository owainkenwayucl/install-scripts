#!/usr/bin/env bash

###############################################
# Installing f18 from git
#
# by Owain Kenway, 2019
#
set -e

for i in ${includes_dir:=$(dirname $0 2>/dev/null)/includes}/{module_maker,require}_inc.sh; do . $i; done

module purge
require beta-modules
require personal-modules
require gcc-libs/7.3.0
#require testing-modules
require compilers/gnu/7.3.0
require cmake/3.21.1
require python/3.9.10
require ninja

NAME=${NAME:-llvm}
VERSION=${VERSION:-13.0.1}
INSTALL_PREFIX=${INSTALL_PREFIX:-$HOME/Applications/$NAME/${VERSION}_min}

SRC_ARCHIVE=${SRC_ARCHIVE:-$(pwd)/llvm-${VERSION}.tar}

rm -rf $INSTALL_PREFIX

mkdir -p /dev/shm/$(whoami)/${NAME}

temp_dir=$(mktemp -d -p /dev/shm/$(whoami)/${NAME})

cd $temp_dir

cp $SRC_ARCHIVE .
tar xvf $SRC_ARCHIVE

cd llvm
git checkout llvmorg-${VERSION}
rm -rf build
mkdir build
cd build

cmake \
  ../llvm \
  -G Ninja \
  -DCMAKE_BUILD_TYPE=Release \
  -DFLANG_ENABLE_WERROR=On \
  -DLLVM_ENABLE_ASSERTIONS=ON \
  -DLLVM_TARGETS_TO_BUILD=host \
  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
  -DLLVM_LIT_ARGS=-v \
  -DLLVM_ENABLE_PROJECTS="clang;mlir;flang" \
  -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
  -DCMAKE_CXX_LINK_FLAGS="-Wl,-rpath,/shared/ucl/apps/gcc/7.3.0/lib64 -L/shared/ucl/apps/gcc/7.3.0/lib64" 

mkdir -p runtimes/runtimes-bins
echo "CMAKE_CXX_FLAGS:STRING=-stdlib=libstdc++ -cxx-isystem /shared/ucl/apps/gcc/7.3.0/include/c++/7.3.0 -cxx-isystem /shared/ucl/apps/gcc/7.3.0/include/c++/7.3.0/x86_64-pc-linux-gnu" > runtimes/runtimes-bins/CMakeCache.txt

ninja
ninja install
rm -rf $temp_dir

rm -rf $temp_dir
