#!/usr/bin/env bash

###############################################
# Installing f18 from git
#
# by Owain Kenway, 2019
#
set -e

for i in ${includes_dir:=$(dirname $0 2>/dev/null)/includes}/{module_maker,require}_inc.sh; do . $i; done

module purge
require beta-modules
require personal-modules
require gcc-libs/4.9.2
require compilers/clang/8.0.0
require cmake/3.21.1
require python/3.9.10

NAME=${NAME:-llvm}
VERSION=${VERSION:-13.0.1}
INSTALL_PREFIX=${INSTALL_PREFIX:-$HOME/Applications/$NAME/$VERSION}

SRC_ARCHIVE=${SRC_ARCHIVE:-$(pwd)/llvm-${VERSION}.tar}


mkdir -p /dev/shm/$(whoami)/${NAME}

temp_dir=$(mktemp -d -p /dev/shm/$(whoami)/${NAME})

cd $temp_dir

cp $SRC_ARCHIVE .
tar xvf $SRC_ARCHIVE

cd llvm
git checkout llvmorg-${VERSION}
rm -rf build
mkdir build
cd build

ccmake \
  ../llvm \
  -DCMAKE_BUILD_TYPE=Release \
  -DFLANG_ENABLE_WERROR=On \
  -DLLVM_ENABLE_ASSERTIONS=ON \
  -DLLVM_TARGETS_TO_BUILD=host \
  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
  -DLLVM_LIT_ARGS=-v \
  -DLLVM_ENABLE_PROJECTS="clang;mlir;flang;libcxx;libcxxabi;libunwind;lldb;lld;polly;openmp" \
  -DLLVM_TOOL_OPENMP_BUILD=True \
  -DLLVM_INSTALL_BINUTILS_SYMLINKS=True \
  -DLLVM_INSTALL_UTILS=True \
  -DLLVM_BUILD_LLVM_DYLIB=True \
  -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=True \
  -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
  -DCMAKE_CXX_LINK_FLAGS="-Wl,-rpath,/shared/ucl/apps/gcc/10.2.0/lib64 -L/shared/ucl/apps/gcc/10.2.0/lib64" 


make -j 30
make install

rm -rf $temp_dir
