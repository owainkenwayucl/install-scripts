#!/usr/bin/env bash

###############################################
# Installing f18 from git
#
# by Owain Kenway, 2019
#
set -e

for i in ${includes_dir:=$(dirname $0 2>/dev/null)/includes}/{module_maker,require}_inc.sh; do . $i; done

module purge
require beta-modules
require personal-modules
require gcc-libs/10.2.0
#require testing-modules
require compilers/gnu/10.2.0
require cmake/3.21.1
require python/3.9.10
require ninja

NAME=${NAME:-llvm}
VERSION=${VERSION:-15.0.1}
INSTALL_PREFIX=${INSTALL_PREFIX:-$HOME/Applications/$NAME/$VERSION}

SRC_ARCHIVE=${SRC_ARCHIVE:-$(pwd)/llvm-${VERSION}.tar}


mkdir -p /dev/shm/$(whoami)/${NAME}

temp_dir=$(mktemp -d -p /dev/shm/$(whoami)/${NAME})

cd $temp_dir

cp $SRC_ARCHIVE .
tar xvf $SRC_ARCHIVE

cd llvm
git checkout llvmorg-${VERSION}
rm -rf build
mkdir build
cd build

#cmake \
#  -G Ninja \
#  ../llvm \
#  -DCMAKE_BUILD_TYPE=Release \
#  -DFLANG_ENABLE_WERROR=On \
#  -DLLVM_ENABLE_ASSERTIONS=ON \
#  -DLLVM_TARGETS_TO_BUILD=host \
#  -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
#  -DLLVM_LIT_ARGS=-v \
#  -DLLVM_ENABLE_PROJECTS="clang;mlir;flang;libcxx;libcxxabi;libunwind;lldb;lld;polly;openmp" \
#  -DLLVM_TOOL_OPENMP_BUILD=True \
#  -DLLVM_INSTALL_BINUTILS_SYMLINKS=True \
#  -DLLVM_INSTALL_UTILS=True \
#  -DLLVM_BUILD_LLVM_DYLIB=True \
#  -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=True \
#  -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
#  -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
#  -DLIBCXX_USE_COMPILER_RT=YES \
#  -DLIBCXXABI_USE_COMPILER_RT=YES \
#  -DLIBCXXABI_USE_LLVM_UNWINDER=YES \
#  -DLIBUNWIND_USE_COMPILER_RT=Yes \
#  -DCMAKE_CXX_LINK_FLAGS="-Wl,-rpath,/shared/ucl/apps/gcc/7.3.0/lib64 -L/shared/ucl/apps/gcc/7.3.0/lib64" 

cmake \
      -G Ninja \
      -DCMAKE_BUILD_TYPE=Release \
      -DLLVM_TARGETS_TO_BUILD=X86 \
      -DLLVM_ENABLE_RUNTIMES="libcxxabi;libcxx" \
      -DLLVM_ENABLE_PROJECTS="lld;mlir;clang;flang;openmp;pstl;polly" \
      -DPYTHON_EXECUTABLE=`which python3` \
      -DCMAKE_C_COMPILER=$CC \
      -DCMAKE_CXX_COMPILER=$CXX \
      -DLLVM_USE_LINKER=gold \
      -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX \
      ../llvm

cmake --build . 
ninja install

rm -rf $temp_dir

